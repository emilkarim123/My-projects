#include <SDL2/SDL.h>

const int PADDLE_SPEED = 5;

int main(int argc, char* argv[])
{
    SDL_Init(SDL_INIT_VIDEO);

    SDL_Window* window = SDL_CreateWindow("SDL2 Test", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 640, 480, 0);

    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, 0);

    SDL_Rect leftpaddle;
    SDL_Rect rightpaddle;
    SDL_Rect ball;



    leftpaddle.x = 10;
	leftpaddle.y = 240;
	leftpaddle.w = 16;
	leftpaddle.h = 64;

	rightpaddle.x = 615;
	rightpaddle.y = 240;
	rightpaddle.w = 16;
	rightpaddle.h = 64;

	ball.x = 320;
	ball.y = 240;
	ball.w = 10;
	ball.h = 10;

	


    
    bool leftmoveup = true;
    bool rightmoveup = false;

    const int FPS = 60;
    const int frameDelay = 1000 / FPS;
    Uint32 frameStart;
    int frameTime;

    bool quit = false;
    while (!quit) {
 		frameStart = SDL_GetTicks();

        SDL_Event event;
        while (SDL_PollEvent(&event)) {
            if (event.type == SDL_QUIT) {
                quit = true;


 
            }
        }


        //Move paddle automatically
        if(leftmoveup){
        	
	        if(leftpaddle.y == 0){
	        	leftmoveup = false;
	        }	
	        else leftpaddle.y -= PADDLE_SPEED;
	    }
        if(!leftmoveup){
        	if(leftpaddle.y >= 480 - leftpaddle.h){
        		leftmoveup = true;
        	}
        	else leftpaddle.y += PADDLE_SPEED;
        }
        if(rightmoveup){
        	
	        if(rightpaddle.y == 0){
	        	rightmoveup = false;
	        }	
	        else rightpaddle.y -= PADDLE_SPEED;
	    }
        if(!rightmoveup){
        	if(rightpaddle.y >= 480 - rightpaddle.h){
        		rightmoveup = true;
        	}
        	else rightpaddle.y += PADDLE_SPEED;
        }


    SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);

    SDL_RenderClear(renderer);

    SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255);

    SDL_RenderFillRect(renderer, &leftpaddle);
    SDL_RenderFillRect(renderer, &rightpaddle);
    SDL_RenderFillRect(renderer, &ball);

    SDL_RenderPresent(renderer);

    frameTime = SDL_GetTicks() - frameStart;
        if (frameDelay > frameTime) {
            SDL_Delay(frameDelay - frameTime);
        }


    }

    SDL_DestroyWindow(window);

    SDL_Quit();

    return 0;
}
